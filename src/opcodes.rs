pub enum OpCode {
    X00,
    X01,
    X05,
    X06,
    X08,
    X09,
    X0a,
    X0d,
    X0e,
    X10,
    X11,
    X15,
    X16,
    X18,
    X19,
    X1d,
    X1e,
    X20,
    X21,
    X24,
    X25,
    X26,
    X28,
    X29,
    X2a,
    X2c,
    X2d,
    X2e,
    X30,
    X31,
    X35,
    X36,
    X38,
    X39,
    X3d,
    X3e,
    X40,
    X41,
    X45,
    X46,
    X48,
    X49,
    X4a,
    X4c,
    X4d,
    X4e,
    X50,
    X51,
    X55,
    X56,
    X58,
    X59,
    X5d,
    X5e,
    X60,
    X61,
    X65,
    X66,
    X68,
    X69,
    X6a,
    X6c,
    X6d,
    X6e,
    X70,
    X71,
    X75,
    X76,
    X78,
    X79,
    X7d,
    X7e,
    X81,
    X84,
    X85,
    X86,
    X88,
    X8a,
    X8c,
    X8d,
    X8e,
    X90,
    X91,
    X94,
    X95,
    X96,
    X98,
    X99,
    X9a,
    X9d,
    Xa0,
    Xa1,
    Xa2,
    Xa4,
    Xa5,
    Xa6,
    Xa8,
    Xa9,
    Xaa,
    Xac,
    Xad,
    Xae,
    Xb0,
    Xb1,
    Xb4,
    Xb5,
    Xb6,
    Xb8,
    Xb9,
    Xba,
    Xbc,
    Xbd,
    Xbe,
    Xc0,
    Xc1,
    Xc4,
    Xc5,
    Xc6,
    Xc8,
    Xc9,
    Xca,
    Xcc,
    Xcd,
    Xce,
    Xd0,
    Xd1,
    Xd5,
    Xd6,
    Xd8,
    Xd9,
    Xdd,
    Xde,
    Xe0,
    Xe1,
    Xe4,
    Xe5,
    Xe6,
    Xe8,
    Xe9,
    Xea,
    Xec,
    Xed,
    Xee,
    Xf0,
    Xf1,
    Xf5,
    Xf6,
    Xf8,
    Xf9,
    Xfd,
    Xfe,
}

impl OpCode {
    pub fn from_code(code: &u8) -> OpCode {
        match code {
            0x00 => OpCode::X00,
            0x01 => OpCode::X01,
            0x05 => OpCode::X05,
            0x06 => OpCode::X06,
            0x08 => OpCode::X08,
            0x09 => OpCode::X09,
            0x0a => OpCode::X0a,
            0x0d => OpCode::X0d,
            0x0e => OpCode::X0e,
            0x10 => OpCode::X10,
            0x11 => OpCode::X11,
            0x15 => OpCode::X15,
            0x16 => OpCode::X16,
            0x18 => OpCode::X18,
            0x19 => OpCode::X19,
            0x1d => OpCode::X1d,
            0x1e => OpCode::X1e,
            0x20 => OpCode::X20,
            0x21 => OpCode::X21,
            0x24 => OpCode::X24,
            0x25 => OpCode::X25,
            0x26 => OpCode::X26,
            0x28 => OpCode::X28,
            0x29 => OpCode::X29,
            0x2a => OpCode::X2a,
            0x2c => OpCode::X2c,
            0x2d => OpCode::X2d,
            0x2e => OpCode::X2e,
            0x30 => OpCode::X30,
            0x31 => OpCode::X31,
            0x35 => OpCode::X35,
            0x36 => OpCode::X36,
            0x38 => OpCode::X38,
            0x39 => OpCode::X39,
            0x3d => OpCode::X3d,
            0x3e => OpCode::X3e,
            0x40 => OpCode::X40,
            0x41 => OpCode::X41,
            0x45 => OpCode::X45,
            0x46 => OpCode::X46,
            0x48 => OpCode::X48,
            0x49 => OpCode::X49,
            0x4a => OpCode::X4a,
            0x4c => OpCode::X4c,
            0x4d => OpCode::X4d,
            0x4e => OpCode::X4e,
            0x50 => OpCode::X50,
            0x51 => OpCode::X51,
            0x55 => OpCode::X55,
            0x56 => OpCode::X56,
            0x58 => OpCode::X58,
            0x59 => OpCode::X59,
            0x5d => OpCode::X5d,
            0x5e => OpCode::X5e,
            0x60 => OpCode::X60,
            0x61 => OpCode::X61,
            0x65 => OpCode::X65,
            0x66 => OpCode::X66,
            0x68 => OpCode::X68,
            0x69 => OpCode::X69,
            0x6a => OpCode::X6a,
            0x6c => OpCode::X6c,
            0x6d => OpCode::X6d,
            0x6e => OpCode::X6e,
            0x70 => OpCode::X70,
            0x71 => OpCode::X71,
            0x75 => OpCode::X75,
            0x76 => OpCode::X76,
            0x78 => OpCode::X78,
            0x79 => OpCode::X79,
            0x7d => OpCode::X7d,
            0x7e => OpCode::X7e,
            0x81 => OpCode::X81,
            0x84 => OpCode::X84,
            0x85 => OpCode::X85,
            0x86 => OpCode::X86,
            0x88 => OpCode::X88,
            0x8a => OpCode::X8a,
            0x8c => OpCode::X8c,
            0x8d => OpCode::X8d,
            0x8e => OpCode::X8e,
            0x90 => OpCode::X90,
            0x91 => OpCode::X91,
            0x94 => OpCode::X94,
            0x95 => OpCode::X95,
            0x96 => OpCode::X96,
            0x98 => OpCode::X98,
            0x99 => OpCode::X99,
            0x9a => OpCode::X9a,
            0x9d => OpCode::X9d,
            0xa0 => OpCode::Xa0,
            0xa1 => OpCode::Xa1,
            0xa2 => OpCode::Xa2,
            0xa4 => OpCode::Xa4,
            0xa5 => OpCode::Xa5,
            0xa6 => OpCode::Xa6,
            0xa8 => OpCode::Xa8,
            0xa9 => OpCode::Xa9,
            0xaa => OpCode::Xaa,
            0xac => OpCode::Xac,
            0xad => OpCode::Xad,
            0xae => OpCode::Xae,
            0xb0 => OpCode::Xb0,
            0xb1 => OpCode::Xb1,
            0xb4 => OpCode::Xb4,
            0xb5 => OpCode::Xb5,
            0xb6 => OpCode::Xb6,
            0xb8 => OpCode::Xb8,
            0xb9 => OpCode::Xb9,
            0xba => OpCode::Xba,
            0xbc => OpCode::Xbc,
            0xbd => OpCode::Xbd,
            0xbe => OpCode::Xbe,
            0xc0 => OpCode::Xc0,
            0xc1 => OpCode::Xc1,
            0xc4 => OpCode::Xc4,
            0xc5 => OpCode::Xc5,
            0xc6 => OpCode::Xc6,
            0xc8 => OpCode::Xc8,
            0xc9 => OpCode::Xc9,
            0xca => OpCode::Xca,
            0xcc => OpCode::Xcc,
            0xcd => OpCode::Xcd,
            0xce => OpCode::Xce,
            0xd0 => OpCode::Xd0,
            0xd1 => OpCode::Xd1,
            0xd5 => OpCode::Xd5,
            0xd6 => OpCode::Xd6,
            0xd8 => OpCode::Xd8,
            0xd9 => OpCode::Xd9,
            0xdd => OpCode::Xdd,
            0xde => OpCode::Xde,
            0xe0 => OpCode::Xe0,
            0xe1 => OpCode::Xe1,
            0xe4 => OpCode::Xe4,
            0xe5 => OpCode::Xe5,
            0xe6 => OpCode::Xe6,
            0xe8 => OpCode::Xe8,
            0xe9 => OpCode::Xe9,
            0xea => OpCode::Xea,
            0xec => OpCode::Xec,
            0xed => OpCode::Xed,
            0xee => OpCode::Xee,
            0xf0 => OpCode::Xf0,
            0xf1 => OpCode::Xf1,
            0xf5 => OpCode::Xf5,
            0xf6 => OpCode::Xf6,
            0xf8 => OpCode::Xf8,
            0xf9 => OpCode::Xf9,
            0xfd => OpCode::Xfd,
            0xfe => OpCode::Xfe,
            _ => {
                panic!("Unknown OpCode")
            }
        }
    }
}

#[derive(Debug)]
pub struct OpCodeDetail {
    pub instruction: Instruction,
    pub bytes: u8,
    pub cycles: i8,
    pub address_mode: AddressingMode,
}

impl OpCodeDetail {
    pub fn from_opcode(opcode: &OpCode) -> Self {
        match opcode {
            OpCode::X00 => OpCodeDetail {
                instruction: Instruction::BRK,
                bytes: 1,
                cycles: 7,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X01 => OpCodeDetail {
                instruction: Instruction::ORA,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::IndirectX,
            },
            OpCode::X05 => OpCodeDetail {
                instruction: Instruction::ORA,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X06 => OpCodeDetail {
                instruction: Instruction::ASL,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X08 => OpCodeDetail {
                instruction: Instruction::PHP,
                bytes: 1,
                cycles: 3,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X09 => OpCodeDetail {
                instruction: Instruction::ORA,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::X0a => OpCodeDetail {
                instruction: Instruction::ASL,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Accumulator,
            },
            OpCode::X0d => OpCodeDetail {
                instruction: Instruction::ORA,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X0e => OpCodeDetail {
                instruction: Instruction::ASL,
                bytes: 3,
                cycles: 6,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X10 => OpCodeDetail {
                instruction: Instruction::BPL,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Relative,
            },
            OpCode::X11 => OpCodeDetail {
                instruction: Instruction::ORA,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::IndirectY,
            },
            OpCode::X15 => OpCodeDetail {
                instruction: Instruction::ORA,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X16 => OpCodeDetail {
                instruction: Instruction::ASL,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X18 => OpCodeDetail {
                instruction: Instruction::CLC,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X19 => OpCodeDetail {
                instruction: Instruction::ORA,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteY,
            },
            OpCode::X1d => OpCodeDetail {
                instruction: Instruction::ORA,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::X1e => OpCodeDetail {
                instruction: Instruction::ASL,
                bytes: 3,
                cycles: 7,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::X20 => OpCodeDetail {
                instruction: Instruction::JSR,
                bytes: 3,
                cycles: 6,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X21 => OpCodeDetail {
                instruction: Instruction::AND,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::IndirectX,
            },
            OpCode::X24 => OpCodeDetail {
                instruction: Instruction::BIT,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X25 => OpCodeDetail {
                instruction: Instruction::AND,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X26 => OpCodeDetail {
                instruction: Instruction::ROL,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X28 => OpCodeDetail {
                instruction: Instruction::PLP,
                bytes: 1,
                cycles: 4,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X29 => OpCodeDetail {
                instruction: Instruction::AND,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::X2a => OpCodeDetail {
                instruction: Instruction::ROL,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Accumulator,
            },
            OpCode::X2c => OpCodeDetail {
                instruction: Instruction::BIT,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X2d => OpCodeDetail {
                instruction: Instruction::AND,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X2e => OpCodeDetail {
                instruction: Instruction::ROL,
                bytes: 3,
                cycles: 6,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X30 => OpCodeDetail {
                instruction: Instruction::BMI,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Relative,
            },
            OpCode::X31 => OpCodeDetail {
                instruction: Instruction::AND,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::IndirectY,
            },
            OpCode::X35 => OpCodeDetail {
                instruction: Instruction::AND,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X36 => OpCodeDetail {
                instruction: Instruction::ROL,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X38 => OpCodeDetail {
                instruction: Instruction::SEC,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X39 => OpCodeDetail {
                instruction: Instruction::AND,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteY,
            },
            OpCode::X3d => OpCodeDetail {
                instruction: Instruction::AND,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::X3e => OpCodeDetail {
                instruction: Instruction::ROL,
                bytes: 3,
                cycles: 7,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::X40 => OpCodeDetail {
                instruction: Instruction::RTI,
                bytes: 1,
                cycles: 6,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X41 => OpCodeDetail {
                instruction: Instruction::EOR,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::IndirectX,
            },
            OpCode::X45 => OpCodeDetail {
                instruction: Instruction::EOR,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X46 => OpCodeDetail {
                instruction: Instruction::LSR,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X48 => OpCodeDetail {
                instruction: Instruction::PHA,
                bytes: 1,
                cycles: 3,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X49 => OpCodeDetail {
                instruction: Instruction::EOR,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::X4a => OpCodeDetail {
                instruction: Instruction::LSR,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Accumulator,
            },
            OpCode::X4c => OpCodeDetail {
                instruction: Instruction::JMP,
                bytes: 3,
                cycles: 3,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X4d => OpCodeDetail {
                instruction: Instruction::EOR,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X4e => OpCodeDetail {
                instruction: Instruction::LSR,
                bytes: 3,
                cycles: 6,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X50 => OpCodeDetail {
                instruction: Instruction::BVC,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Relative,
            },
            OpCode::X51 => OpCodeDetail {
                instruction: Instruction::EOR,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::IndirectY,
            },
            OpCode::X55 => OpCodeDetail {
                instruction: Instruction::EOR,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X56 => OpCodeDetail {
                instruction: Instruction::LSR,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X58 => OpCodeDetail {
                instruction: Instruction::CLI,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X59 => OpCodeDetail {
                instruction: Instruction::EOR,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteY,
            },
            OpCode::X5d => OpCodeDetail {
                instruction: Instruction::EOR,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::X5e => OpCodeDetail {
                instruction: Instruction::LSR,
                bytes: 3,
                cycles: 7,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::X60 => OpCodeDetail {
                instruction: Instruction::RTS,
                bytes: 1,
                cycles: 6,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X61 => OpCodeDetail {
                instruction: Instruction::ADC,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::IndirectX,
            },
            OpCode::X65 => OpCodeDetail {
                instruction: Instruction::ADC,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X66 => OpCodeDetail {
                instruction: Instruction::ROR,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X68 => OpCodeDetail {
                instruction: Instruction::PLA,
                bytes: 1,
                cycles: 4,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X69 => OpCodeDetail {
                instruction: Instruction::ADC,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::X6a => OpCodeDetail {
                instruction: Instruction::ROR,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Accumulator,
            },
            OpCode::X6c => OpCodeDetail {
                instruction: Instruction::JMP,
                bytes: 3,
                cycles: 5,
                address_mode: AddressingMode::Indirect,
            },
            OpCode::X6d => OpCodeDetail {
                instruction: Instruction::ADC,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X6e => OpCodeDetail {
                instruction: Instruction::ROR,
                bytes: 3,
                cycles: 6,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X70 => OpCodeDetail {
                instruction: Instruction::BVS,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Relative,
            },
            OpCode::X71 => OpCodeDetail {
                instruction: Instruction::ADC,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::IndirectY,
            },
            OpCode::X75 => OpCodeDetail {
                instruction: Instruction::ADC,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X76 => OpCodeDetail {
                instruction: Instruction::ROR,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X78 => OpCodeDetail {
                instruction: Instruction::SEI,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X79 => OpCodeDetail {
                instruction: Instruction::ADC,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteY,
            },
            OpCode::X7d => OpCodeDetail {
                instruction: Instruction::ADC,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::X7e => OpCodeDetail {
                instruction: Instruction::ROR,
                bytes: 3,
                cycles: 7,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::X81 => OpCodeDetail {
                instruction: Instruction::STA,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::IndirectX,
            },
            OpCode::X84 => OpCodeDetail {
                instruction: Instruction::STY,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X85 => OpCodeDetail {
                instruction: Instruction::STA,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X86 => OpCodeDetail {
                instruction: Instruction::STX,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::X88 => OpCodeDetail {
                instruction: Instruction::DEY,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X8a => OpCodeDetail {
                instruction: Instruction::TXA,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X8c => OpCodeDetail {
                instruction: Instruction::STY,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X8d => OpCodeDetail {
                instruction: Instruction::STA,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X8e => OpCodeDetail {
                instruction: Instruction::STX,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::X90 => OpCodeDetail {
                instruction: Instruction::BCC,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Relative,
            },
            OpCode::X91 => OpCodeDetail {
                instruction: Instruction::STA,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::IndirectY,
            },
            OpCode::X94 => OpCodeDetail {
                instruction: Instruction::STY,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X95 => OpCodeDetail {
                instruction: Instruction::STA,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::X96 => OpCodeDetail {
                instruction: Instruction::STX,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageY,
            },
            OpCode::X98 => OpCodeDetail {
                instruction: Instruction::TYA,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X99 => OpCodeDetail {
                instruction: Instruction::STA,
                bytes: 3,
                cycles: 5,
                address_mode: AddressingMode::AbsoluteY,
            },
            OpCode::X9a => OpCodeDetail {
                instruction: Instruction::TXS,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::X9d => OpCodeDetail {
                instruction: Instruction::STA,
                bytes: 3,
                cycles: 5,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::Xa0 => OpCodeDetail {
                instruction: Instruction::LDY,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::Xa1 => OpCodeDetail {
                instruction: Instruction::LDA,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::IndirectX,
            },
            OpCode::Xa2 => OpCodeDetail {
                instruction: Instruction::LDX,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::Xa4 => OpCodeDetail {
                instruction: Instruction::LDY,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::Xa5 => OpCodeDetail {
                instruction: Instruction::LDA,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::Xa6 => OpCodeDetail {
                instruction: Instruction::LDX,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::Xa8 => OpCodeDetail {
                instruction: Instruction::TAY,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xa9 => OpCodeDetail {
                instruction: Instruction::LDA,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::Xaa => OpCodeDetail {
                instruction: Instruction::TAX,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xac => OpCodeDetail {
                instruction: Instruction::LDY,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::Xad => OpCodeDetail {
                instruction: Instruction::LDA,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::Xae => OpCodeDetail {
                instruction: Instruction::LDX,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::Xb0 => OpCodeDetail {
                instruction: Instruction::BCS,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Relative,
            },
            OpCode::Xb1 => OpCodeDetail {
                instruction: Instruction::LDA,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::IndirectY,
            },
            OpCode::Xb4 => OpCodeDetail {
                instruction: Instruction::LDY,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::Xb5 => OpCodeDetail {
                instruction: Instruction::LDA,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::Xb6 => OpCodeDetail {
                instruction: Instruction::LDX,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageY,
            },
            OpCode::Xb8 => OpCodeDetail {
                instruction: Instruction::CLV,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xb9 => OpCodeDetail {
                instruction: Instruction::LDA,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteY,
            },
            OpCode::Xba => OpCodeDetail {
                instruction: Instruction::TSX,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xbc => OpCodeDetail {
                instruction: Instruction::LDY,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::Xbd => OpCodeDetail {
                instruction: Instruction::LDA,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::Xbe => OpCodeDetail {
                instruction: Instruction::LDX,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteY,
            },
            OpCode::Xc0 => OpCodeDetail {
                instruction: Instruction::CPY,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::Xc1 => OpCodeDetail {
                instruction: Instruction::CMP,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::IndirectX,
            },
            OpCode::Xc4 => OpCodeDetail {
                instruction: Instruction::CPY,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::Xc5 => OpCodeDetail {
                instruction: Instruction::CMP,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::Xc6 => OpCodeDetail {
                instruction: Instruction::DEC,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::Xc8 => OpCodeDetail {
                instruction: Instruction::INY,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xc9 => OpCodeDetail {
                instruction: Instruction::CMP,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::Xca => OpCodeDetail {
                instruction: Instruction::DEX,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xcc => OpCodeDetail {
                instruction: Instruction::CPY,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::Xcd => OpCodeDetail {
                instruction: Instruction::CMP,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::Xce => OpCodeDetail {
                instruction: Instruction::DEC,
                bytes: 3,
                cycles: 6,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::Xd0 => OpCodeDetail {
                instruction: Instruction::BNE,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Relative,
            },
            OpCode::Xd1 => OpCodeDetail {
                instruction: Instruction::CMP,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::IndirectY,
            },
            OpCode::Xd5 => OpCodeDetail {
                instruction: Instruction::CMP,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::Xd6 => OpCodeDetail {
                instruction: Instruction::DEC,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::Xd8 => OpCodeDetail {
                instruction: Instruction::CLD,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xd9 => OpCodeDetail {
                instruction: Instruction::CMP,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteY,
            },
            OpCode::Xdd => OpCodeDetail {
                instruction: Instruction::CMP,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::Xde => OpCodeDetail {
                instruction: Instruction::DEC,
                bytes: 3,
                cycles: 7,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::Xe0 => OpCodeDetail {
                instruction: Instruction::CPX,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::Xe1 => OpCodeDetail {
                instruction: Instruction::SBC,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::IndirectX,
            },
            OpCode::Xe4 => OpCodeDetail {
                instruction: Instruction::CPX,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::Xe5 => OpCodeDetail {
                instruction: Instruction::SBC,
                bytes: 2,
                cycles: 3,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::Xe6 => OpCodeDetail {
                instruction: Instruction::INC,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::ZeroPage,
            },
            OpCode::Xe8 => OpCodeDetail {
                instruction: Instruction::INX,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xe9 => OpCodeDetail {
                instruction: Instruction::SBC,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Immediate,
            },
            OpCode::Xea => OpCodeDetail {
                instruction: Instruction::NOP,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xec => OpCodeDetail {
                instruction: Instruction::CPX,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::Xed => OpCodeDetail {
                instruction: Instruction::SBC,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::Xee => OpCodeDetail {
                instruction: Instruction::INC,
                bytes: 3,
                cycles: 6,
                address_mode: AddressingMode::Absolute,
            },
            OpCode::Xf0 => OpCodeDetail {
                instruction: Instruction::BEQ,
                bytes: 2,
                cycles: 2,
                address_mode: AddressingMode::Relative,
            },
            OpCode::Xf1 => OpCodeDetail {
                instruction: Instruction::SBC,
                bytes: 2,
                cycles: 5,
                address_mode: AddressingMode::IndirectY,
            },
            OpCode::Xf5 => OpCodeDetail {
                instruction: Instruction::SBC,
                bytes: 2,
                cycles: 4,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::Xf6 => OpCodeDetail {
                instruction: Instruction::INC,
                bytes: 2,
                cycles: 6,
                address_mode: AddressingMode::ZeroPageX,
            },
            OpCode::Xf8 => OpCodeDetail {
                instruction: Instruction::SED,
                bytes: 1,
                cycles: 2,
                address_mode: AddressingMode::Implied,
            },
            OpCode::Xf9 => OpCodeDetail {
                instruction: Instruction::SBC,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteY,
            },
            OpCode::Xfd => OpCodeDetail {
                instruction: Instruction::SBC,
                bytes: 3,
                cycles: 4,
                address_mode: AddressingMode::AbsoluteX,
            },
            OpCode::Xfe => OpCodeDetail {
                instruction: Instruction::INC,
                bytes: 3,
                cycles: 7,
                address_mode: AddressingMode::AbsoluteX,
            },
        }
    }
}

#[derive(Debug)]
pub enum AddressingMode {
    Immediate,
    ZeroPage,
    ZeroPageX,
    ZeroPageY,
    Absolute,
    AbsoluteX,
    AbsoluteY,
    Indirect,
    IndirectX,
    IndirectY,
    Implied,
    Relative,
    Accumulator,
}

#[derive(Debug)]
pub enum Instruction {
    BRK,
    PHP,
    BPL,
    CLC,
    ORA,
    ASL,
    JSR,
    PLP,
    BIT,
    BMI,
    SEC,
    AND,
    ROL,
    RTI,
    PHA,
    BVC,
    CLI,
    EOR,
    LSR,
    RTS,
    PLA,
    JMP,
    BVS,
    SEI,
    ADC,
    ROR,
    DEY,
    TXA,
    BCC,
    STY,
    STX,
    TYA,
    TXS,
    STA,
    TAY,
    TAX,
    BCS,
    CLV,
    TSX,
    LDY,
    LDA,
    LDX,
    INY,
    DEX,
    CPY,
    BNE,
    CLD,
    CMP,
    DEC,
    INX,
    NOP,
    CPX,
    BEQ,
    SED,
    SBC,
    INC,
}

impl Instruction {
    pub fn to_string(&self) -> &str {
        match self {
            Instruction::BRK => "BRK",
            Instruction::PHP => "PHP",
            Instruction::BPL => "BPL",
            Instruction::CLC => "CLC",
            Instruction::ORA => "ORA",
            Instruction::ASL => "ASL",
            Instruction::JSR => "JSR",
            Instruction::PLP => "PLP",
            Instruction::BIT => "BIT",
            Instruction::BMI => "BMI",
            Instruction::SEC => "SEC",
            Instruction::AND => "AND",
            Instruction::ROL => "ROL",
            Instruction::RTI => "RTI",
            Instruction::PHA => "PHA",
            Instruction::BVC => "BVC",
            Instruction::CLI => "CLI",
            Instruction::EOR => "EOR",
            Instruction::LSR => "LSR",
            Instruction::RTS => "RTS",
            Instruction::PLA => "PLA",
            Instruction::JMP => "JMP",
            Instruction::BVS => "BVS",
            Instruction::SEI => "SEI",
            Instruction::ADC => "ADC",
            Instruction::ROR => "ROR",
            Instruction::DEY => "DEY",
            Instruction::TXA => "TXA",
            Instruction::BCC => "BCC",
            Instruction::STY => "STY",
            Instruction::STX => "STX",
            Instruction::TYA => "TYA",
            Instruction::TXS => "TXS",
            Instruction::STA => "STA",
            Instruction::TAY => "TAY",
            Instruction::TAX => "TAX",
            Instruction::BCS => "BCS",
            Instruction::CLV => "CLV",
            Instruction::TSX => "TSX",
            Instruction::LDY => "LDY",
            Instruction::LDA => "LDA",
            Instruction::LDX => "LDX",
            Instruction::INY => "INY",
            Instruction::DEX => "DEX",
            Instruction::CPY => "CPY",
            Instruction::BNE => "BNE",
            Instruction::CLD => "CLD",
            Instruction::CMP => "CMP",
            Instruction::DEC => "DEC",
            Instruction::INX => "INX",
            Instruction::NOP => "NOP",
            Instruction::CPX => "CPX",
            Instruction::BEQ => "BEQ",
            Instruction::SED => "SED",
            Instruction::SBC => "SBC",
            Instruction::INC => "INC",
        }
    }
}
